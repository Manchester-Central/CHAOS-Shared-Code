name: Pull Request - Java Build & Lint & beta release

on: [pull_request]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '17.0.1'
    - name: Run Linter
      run: bash .githooks/pre-commit.sh
    - name: Cache Gradle dependendies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle- 
    - name: Build with Gradle
      run: bash ./gradlew build --info
    - name: Load Release JSON Config
      uses: rgarcia-phi/json-to-variables@v1.1.0
      with:
        filename: 'release-config.json'
        prefix: release
    - name: Show Release Version
      id: release-info
      run: |
        version="${{ env.release_major_version }}.${{ env.release_minor_version }}.${{ github.run_id }}" # Find a way to make patch start at zero
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Creating release for ${{ version }}"
    - name: Create Release
      id: release
      uses: avakar/tag-and-release@v1
      with:
        tag_name: "${{ steps.release-info.outputs.version }}"
        release_name: "BETA ${{ steps.release-info.outputs.version }}"
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
    # - name: Create Release
    #   uses: rymndhng/release-on-push-action@v0.28.0
    #   id: release
    #   with:
    #     bump_version_scheme: patch
    #     release_name: "BETA <RELEASE_VERSION>"
    #     max_commits: 0 # Can try increasing later
    # - name: Get Release Info
    #   uses: cardinalby/git-get-release-action@v1
    #   id: get-release
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   with:
    #     tag: "${{ steps.release.outputs.tag_name }}"   
    # - name: Check Output Parameters
    #   run: |
    #     echo "Got tag name ${{ steps.release.outputs.tag_name }}"
    #     echo "Got release version ${{ steps.release.outputs.version }}"
    #     echo "Upload release artifacts to ${{ steps.get-release.outputs.upload_url }}"
    - name: Upload Jar File
      id: upload-jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: "${{ steps.release.outputs.upload_url }}"
        asset_path: ./build/libs/CHAOS-Shared-Code.jar
        asset_name: "CHAOS-Shared-Code-${{ steps.release-info.outputs.version }}-beta.jar"
        asset_content_type: application/zip
    - name: Send Jar Link to PR
      uses: actions/github-script@v6
      env:
        JAR_URL: ${{ fromJSON(steps.upload-jar.outputs.assets)[0].browser_download_url }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `The JAR file for this MR can be found here: ${JAR_URL}`
          })
